"""Initial migration with corrected ontology models.

Revision ID: 9d4ebd0642fa
Revises: 
Create Date: 2025-06-24 01:43:21.929334

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9d4ebd0642fa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('capability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('job_level',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('level_name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('salary_band_min', sa.Integer(), nullable=True),
    sa.Column('salary_band_max', sa.Integer(), nullable=True),
    sa.Column('min_experience_years', sa.Integer(), nullable=True),
    sa.Column('allowed_titles', sa.Text(), nullable=True),
    sa.Column('level_code', sa.String(length=50), nullable=True),
    sa.Column('is_managerial', sa.Boolean(), nullable=True),
    sa.Column('promotion_criteria', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level_name')
    )
    op.create_table('organization',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('company_size', sa.String(length=50), nullable=True),
    sa.Column('operating_regions', sa.Text(), nullable=True),
    sa.Column('founded_year', sa.Integer(), nullable=True),
    sa.Column('public_or_private', sa.String(length=50), nullable=True),
    sa.Column('stock_symbol', sa.String(length=10), nullable=True),
    sa.Column('vision_mission', sa.Text(), nullable=True),
    sa.Column('org_maturity_level', sa.String(length=50), nullable=True),
    sa.Column('hrms_integrated', sa.Boolean(), nullable=True),
    sa.Column('erp_system', sa.String(length=100), nullable=True),
    sa.Column('org_chart_available', sa.Boolean(), nullable=True),
    sa.Column('org_metadata_file', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_name')
    )
    op.create_table('relationship_type',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role_group',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sample_roles', sa.Text(), nullable=True),
    sa.Column('strategic_importance', sa.String(length=100), nullable=True),
    sa.Column('business_critical', sa.Boolean(), nullable=True),
    sa.Column('associated_departments', sa.Text(), nullable=True),
    sa.Column('role_family_code', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('criticality', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skill_tag',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('assessment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.Column('assessment_type', sa.String(length=100), nullable=False),
    sa.Column('date_created', sa.Date(), nullable=False),
    sa.Column('last_updated', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('behavior',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], name='fk_behavior_skill_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('business_unit',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('head', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('organization_id', sa.String(length=150), nullable=False),
    sa.Column('strategic_priority', sa.Text(), nullable=True),
    sa.Column('kpis', sa.Text(), nullable=True),
    sa.Column('business_unit_type', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=150), nullable=True),
    sa.Column('budget_allocation', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('certification',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('issuing_organization', sa.String(length=255), nullable=False),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('credential_id', sa.String(length=255), nullable=True),
    sa.Column('credential_url', sa.Text(), nullable=True),
    sa.Column('user_id', sa.String(length=150), nullable=False),
    sa.Column('skill_id', sa.String(length=150), nullable=True),
    sa.Column('organization_id', sa.String(length=150), nullable=True),
    sa.Column('certification_type', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('capability_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['capability_id'], ['capability.id'], name='fk_competency_capability_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('job_profile',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('job_title', sa.String(length=255), nullable=False),
    sa.Column('job_level_id', sa.String(length=150), nullable=True),
    sa.Column('role_group_id', sa.String(length=150), nullable=True),
    sa.Column('job_family', sa.String(length=150), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('education', sa.Text(), nullable=True),
    sa.Column('language_requirements', sa.Text(), nullable=True),
    sa.Column('reports_to', sa.String(length=150), nullable=True),
    sa.Column('work_model', sa.String(length=50), nullable=True),
    sa.Column('job_type', sa.String(length=50), nullable=True),
    sa.Column('union_affiliation', sa.Boolean(), nullable=True),
    sa.Column('job_code', sa.String(length=50), nullable=True),
    sa.Column('work_location', sa.String(length=150), nullable=True),
    sa.Column('travel_required', sa.Boolean(), nullable=True),
    sa.Column('compliance_requirements', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['job_level_id'], ['job_level.id'], ),
    sa.ForeignKeyConstraint(['role_group_id'], ['role_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('resource_type', sa.String(length=100), nullable=False),
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.Column('author', sa.String(length=150), nullable=True),
    sa.Column('estimated_time_minutes', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proficiency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill_gap',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('user_id', sa.String(length=150), nullable=False),
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.Column('required_proficiency', sa.Integer(), nullable=False),
    sa.Column('current_proficiency', sa.Integer(), nullable=False),
    sa.Column('gap_score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill_relationship',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_skill_id', sa.String(length=150), nullable=False),
    sa.Column('target_skill_id', sa.String(length=150), nullable=False),
    sa.Column('relationship_type_id', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['relationship_type_id'], ['relationship_type.id'], ),
    sa.ForeignKeyConstraint(['source_skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['target_skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill_tag_map',
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.Column('tag_id', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['skill_tag.id'], ),
    sa.PrimaryKeyConstraint('skill_id', 'tag_id')
    )
    op.create_table('competency_skills',
    sa.Column('competency_id', sa.String(length=150), nullable=False),
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competency.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('competency_id', 'skill_id')
    )
    op.create_table('department',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('business_unit_id', sa.String(length=150), nullable=False),
    sa.Column('manager', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('headcount_budget', sa.Integer(), nullable=True),
    sa.Column('function_type', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=150), nullable=True),
    sa.Column('shift_coverage', sa.Boolean(), nullable=True),
    sa.Column('time_zone', sa.String(length=50), nullable=True),
    sa.Column('department_code', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['business_unit_id'], ['business_unit.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('job_profile_required_skills',
    sa.Column('job_profile_id', sa.String(length=150), nullable=False),
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['job_profile_id'], ['job_profile.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('job_profile_id', 'skill_id')
    )
    op.create_table('user_skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=150), nullable=False),
    sa.Column('skill_id', sa.String(length=150), nullable=False),
    sa.Column('proficiency_level_id', sa.Integer(), nullable=False),
    sa.Column('acquired_date', sa.Date(), nullable=False),
    sa.Column('last_validated_date', sa.Date(), nullable=True),
    sa.Column('validation_status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['proficiency_level_id'], ['proficiency.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('business_unit_departments',
    sa.Column('business_unit_id', sa.String(length=150), nullable=False),
    sa.Column('department_id', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['business_unit_id'], ['business_unit.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.PrimaryKeyConstraint('business_unit_id', 'department_id')
    )
    op.create_table('role',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('department_id', sa.String(length=150), nullable=False),
    sa.Column('job_level_id', sa.String(length=150), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ),
    sa.ForeignKeyConstraint(['job_level_id'], ['job_level.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('career_path',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('source_role_id', sa.String(length=150), nullable=False),
    sa.Column('target_role_id', sa.String(length=150), nullable=False),
    sa.Column('transition_type', sa.String(length=100), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['source_role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['target_role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('giver_id', sa.String(length=150), nullable=False),
    sa.Column('receiver_id', sa.String(length=150), nullable=False),
    sa.Column('feedback_text', sa.Text(), nullable=False),
    sa.Column('feedback_date', sa.Date(), nullable=False),
    sa.Column('feedback_type', sa.String(length=100), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('associated_role_id', sa.String(length=150), nullable=True),
    sa.Column('skill_id', sa.String(length=150), nullable=True),
    sa.Column('competency_id', sa.String(length=150), nullable=True),
    sa.Column('private_notes', sa.Text(), nullable=True),
    sa.Column('action_items', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['associated_role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['competency_id'], ['competency.id'], ),
    sa.ForeignKeyConstraint(['giver_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_path',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('role_id', sa.String(length=150), nullable=True),
    sa.Column('created_by', sa.String(length=150), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_or_assignment',
    sa.Column('id', sa.String(length=150), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('project_type', sa.String(length=100), nullable=False),
    sa.Column('budget', sa.Integer(), nullable=True),
    sa.Column('manager_id', sa.String(length=150), nullable=False),
    sa.Column('organization_id', sa.String(length=150), nullable=False),
    sa.Column('associated_role_id', sa.String(length=150), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['associated_role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_competencies',
    sa.Column('role_id', sa.String(length=150), nullable=False),
    sa.Column('competency_id', sa.String(length=150), nullable=False),
    sa.ForeignKeyConstraint(['competency_id'], ['competency.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'competency_id')
    )
    op.create_table('user_career_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(length=150), nullable=False),
    sa.Column('role_id', sa.String(length=150), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_path_resources',
    sa.Column('learning_path_id', sa.String(length=150), nullable=False),
    sa.Column('learning_resource_id', sa.Integer(), nullable=False),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['learning_path_id'], ['learning_path.id'], ),
    sa.ForeignKeyConstraint(['learning_resource_id'], ['learning_resource.id'], ),
    sa.PrimaryKeyConstraint('learning_path_id', 'learning_resource_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('learning_path_resources')
    op.drop_table('user_career_history')
    op.drop_table('role_competencies')
    op.drop_table('project_or_assignment')
    op.drop_table('learning_path')
    op.drop_table('feedback')
    op.drop_table('career_path')
    op.drop_table('role')
    op.drop_table('business_unit_departments')
    op.drop_table('user_skill')
    op.drop_table('job_profile_required_skills')
    op.drop_table('department')
    op.drop_table('competency_skills')
    op.drop_table('skill_tag_map')
    op.drop_table('skill_relationship')
    op.drop_table('skill_gap')
    op.drop_table('proficiency')
    op.drop_table('learning_resource')
    op.drop_table('job_profile')
    op.drop_table('competency')
    op.drop_table('certification')
    op.drop_table('business_unit')
    op.drop_table('behavior')
    op.drop_table('assessment')
    op.drop_table('user')
    op.drop_table('skill_tag')
    op.drop_table('skill')
    op.drop_table('role_group')
    op.drop_table('relationship_type')
    op.drop_table('organization')
    op.drop_table('job_level')
    op.drop_table('capability')
    # ### end Alembic commands ###
